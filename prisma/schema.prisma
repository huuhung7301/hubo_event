// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Work {
  id            Int                @id @default(autoincrement())
  title         String
  imageUrl      String
  notes         String?
  categories    WorkCategory[]
  items         WorkItem[]
  optionalItems WorkOptionalItem[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  Reservation   Reservation[]
}

model Category {
  id    Int            @id @default(autoincrement())
  name  String         @unique
  works WorkCategory[]
}

model WorkCategory {
  workId     Int
  categoryId Int
  work       Work     @relation(fields: [workId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([workId, categoryId])
}

model ItemCategory {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  items     Item[]   // relation to Item
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id               Int              @id @default(autoincrement())
  key              String           @unique
  name             String
  basePrice        Float
  unit             String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  // new relation ðŸ‘‡
  categoryId       Int?
  category         ItemCategory?    @relation(fields: [categoryId], references: [id])

  workItems        WorkItem[]
  WorkOptionalItem WorkOptionalItem[]
}

model WorkItem {
  id       Int  @id @default(autoincrement())
  workId   Int
  itemId   Int
  quantity Int  @default(1)
  work     Work @relation(fields: [workId], references: [id])
  item     Item @relation(fields: [itemId], references: [id])
}

model WorkOptionalItem {
  id       Int  @id @default(autoincrement())
  workId   Int
  itemId   Int
  quantity Int  @default(1)
  work     Work @relation(fields: [workId], references: [id])
  item     Item @relation(fields: [itemId], references: [id])
}

model Reservation {
  id             Int               @id @default(autoincrement())
  workId         Int
  work           Work              @relation(fields: [workId], references: [id])
  userId         String?
  customerName   String?
  customerEmail  String?
  customerPhone  String?
  notes          String?
  totalPrice     Float             @default(0)
  status         ReservationStatus @default(PENDING)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt

  // ðŸ§© JSON fields to store selected items
  items          Json?              // required
  optionalItems  Json?             // optional
}


enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
